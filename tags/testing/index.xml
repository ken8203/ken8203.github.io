<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>testing on Hi im jaychung</title><link>https://blog.jaychung.tw/tags/testing/</link><description>Recent content in testing on Hi im jaychung</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 03 May 2019 23:33:52 +0800</lastBuildDate><atom:link href="https://blog.jaychung.tw/tags/testing/index.xml" rel="self" type="application/rss+xml"/><item><title>Golang Unit Test for Beginners</title><link>https://blog.jaychung.tw/posts/golang-unit-test-for-beginners/</link><pubDate>Fri, 03 May 2019 23:33:52 +0800</pubDate><guid>https://blog.jaychung.tw/posts/golang-unit-test-for-beginners/</guid><description>我一直覺得寫測試是程式開發中相當重要的一環，不論對自己、對他人都有相當的益處。今天來說說 golang 要怎麼寫 unit test，如果你是 golang 老手，就可以左轉了 XD
Package golang 提供一個很方便的 package - testing。但其實除了 test 以外，它還能做 benchmark，這部分有機會再寫一篇文章專門介紹。
Demo 這邊用個簡單的 sum 來 demo，此為 foo.go 檔案
package foo // Sum, to add all nums func Sum(nums ...int) int { total := 0 for _, num := range nums { total += num } return total } golang 中測試檔案會用 {file}_test.go 這種 pattern 來表示，因此這個 demo 對應的就是 foo_test.go
package foo import &amp;#34;testing&amp;#34; func TestSum(t *testing.T) { a := 1 b := 2 c := 3 expected := a + b + c actual := Sum(a, b, c) if expected !</description></item></channel></rss>