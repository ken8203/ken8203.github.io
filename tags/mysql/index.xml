<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>mysql on Hi im jaychung</title><link>https://blog.jaychung.tw/tags/mysql/</link><description>Recent content in mysql on Hi im jaychung</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 14 Jan 2018 23:37:35 +0800</lastBuildDate><atom:link href="https://blog.jaychung.tw/tags/mysql/index.xml" rel="self" type="application/rss+xml"/><item><title>Referral and Nested Model Set</title><link>https://blog.jaychung.tw/posts/referral-and-nested-model-set/</link><pubDate>Sun, 14 Jan 2018 23:37:35 +0800</pubDate><guid>https://blog.jaychung.tw/posts/referral-and-nested-model-set/</guid><description>推薦人機制相信大家都不陌生，多多少少都有遇過，有些網站可能在註冊會員時會有一欄可以填寫推薦人，概念大致上如下：
User A 首先加入，他覺得這個服務很棒於是推薦給 User B 和 User C， User B 也感受到了服務帶給他的便利，於是推薦給 User D 和 User E，這跟老鼠會有 87% 像。
今天在吃水餃看新聞的時候，推薦人機制從我腦中呼嘯而過，就邊吃水餃邊想，如果是我，我要怎麼設計出一個有推薦人機制的會員系統？一開始想說用個 mapping table 就可以了事，但仔細一想，這樣 query 會寫不完呀！
畢竟是老鼠會推薦人機制，你會想要知道因為 User A 而進來的會員究竟有哪些人，以上面的例子來講就是
User B User C / \ User D User E 總共有四個人是因為 User A 而註冊的。
Trivial method 假設我們今天用最簡單的方法，建立一張 parent-child 的表來記錄推薦人。
create table `referral` ( `id` int(11) NOT NULL AUTO_INCREMENT, `parent` varchar(63) DEFAULT NULL, `child` varchar(63) DEFAULT NULL, PRIMARY KEY (`id`) ) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8; 那根據上面例子所建的表就會如下：</description></item></channel></rss>