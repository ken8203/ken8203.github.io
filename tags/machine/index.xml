<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>machine on Hi im jaychung</title><link>https://blog.jaychung.tw/tags/machine/</link><description>Recent content in machine on Hi im jaychung</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 02 Aug 2015 23:12:24 +0800</lastBuildDate><atom:link href="https://blog.jaychung.tw/tags/machine/index.xml" rel="self" type="application/rss+xml"/><item><title>How to use DictVectorizer (Scikit Learn)</title><link>https://blog.jaychung.tw/posts/scikit-learn-dictvectorizer/</link><pubDate>Sun, 02 Aug 2015 23:12:24 +0800</pubDate><guid>https://blog.jaychung.tw/posts/scikit-learn-dictvectorizer/</guid><description>以往使用的機器學習（Machine Learning）工具都是 LIBSVM，而這次因緣際會用了 Python 的 scikit-learn，卻不知道如何使用自己的 Feature，剛好來記錄一下。
scikit-learn 很強大的內建了幾種 Feature generator，像是 CountVectorizer、TfidfVectorizer&amp;hellip;等等。而 DictVectorizer 則可以搭配自己的 Feature ，用法如下：
from sklearn.feature_extraction import DictVectorizer vectorizer = DictVectorizer(sparse=False) features = [ {&amp;#39;feature_name_1&amp;#39;: 1, &amp;#39;feature_name_2&amp;#39;: 2}, {&amp;#39;feature_name_1&amp;#39;: 3, &amp;#39;feature_name_3&amp;#39;: 1} ] X = vectorizer.fit_transform(features) model = SomeKindofModel() clf = model.fit(X, label)</description></item></channel></rss>